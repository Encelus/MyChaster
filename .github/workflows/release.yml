name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ci
          POSTGRES_PASSWORD: changeme
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: "adopt"

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Set Maven Release Version
        run: mvn versions:set --batch-mode -DnewVersion="${{ github.event.inputs.releaseVersion }}"

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots install -P production

      - name: Commit Release Version
        run: |
          git add .
          git commit -m "Release ${{ github.event.inputs.releaseVersion }}"
          git push
          git tag ${{ github.event.inputs.releaseVersion }}
          git push --tags origin master
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.releaseVersion }}
          name: Release ${{ github.event.inputs.releaseVersion }}
          draft: false
          prerelease: false
          artifacts: "target/mychaster-*spring-boot.jar"

      - name: Prepare Next Maven Release
        run: mvn versions:set --batch-mode -DnewVersion="${{ github.event.inputs.developmentVersion }}"

      - name: Commit Prepared Version
        run: |
          git add .
          git commit -m "Prepare ${{ github.event.inputs.developmentVersion }}"
          git push
